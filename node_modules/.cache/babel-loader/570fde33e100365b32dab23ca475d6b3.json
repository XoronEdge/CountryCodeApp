{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/i/ReactApp/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/i/ReactApp/frontend/src/pages/Country/Country.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    countries {\\n      name\\n      code\\n      continent {\\n        name\\n      }\\n      languages {\\n        name\\n        native\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nconst COUNTRIES_QUERY = gql(_templateObject());\n\nconst Country = ({\n  match\n}) => {\n  const _useQuery = useQuery(COUNTRIES_QUERY),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Hello From Country\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, data.countries.map(country => {\n    console.log(country);\n    return React.createElement(\"li\", {\n      key: country.name + country.currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(Link, {\n      to: \"\".concat(match.path, \"/\").concat(country.code),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, country.name, \" \", country.code), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Continent::=> \", country.continent.name), country.languages.map(language => {\n      return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Native::=> \", language.native), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"English::=> \", language.name));\n    })));\n  })));\n};\n\nexport default Country;","map":{"version":3,"sources":["/home/i/ReactApp/frontend/src/pages/Country/Country.js"],"names":["React","Link","useQuery","gql","COUNTRIES_QUERY","Country","match","loading","error","data","countries","map","country","console","log","name","currency","path","code","continent","languages","language","native"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,MAAMC,eAAe,GAAGD,GAAH,mBAArB;;AAeA,MAAME,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA,oBACIJ,QAAQ,CAACE,eAAD,CADZ;AAAA,QACrBG,OADqB,aACrBA,OADqB;AAAA,QACZC,KADY,aACZA,KADY;AAAA,QACLC,IADK,aACLA,IADK;;AAE7B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmBC,OAAO,IAAI;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WACE;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACG,IAAR,GAAeH,OAAO,CAACI,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,0CACE,oBAAC,IAAD;AAAM,MAAA,EAAE,YAAKV,KAAK,CAACW,IAAX,cAAmBL,OAAO,CAACM,IAA3B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,OAAO,CAACG,IADX,OACkBH,OAAO,CAACM,IAD1B,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmBN,OAAO,CAACO,SAAR,CAAkBJ,IAArC,CAJF,EAKGH,OAAO,CAACQ,SAAR,CAAkBT,GAAlB,CAAsBU,QAAQ,IAAI;AACjC,aACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgBA,QAAQ,CAACC,MAAzB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAiBD,QAAQ,CAACN,IAA1B,CAFF,CADF;AAMD,KAPA,CALH,CAFJ,CADF;AAoBD,GAtBA,CADH,CAFF,CADF;AA8BD,CAlCD;;AAoCA,eAAeV,OAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nconst COUNTRIES_QUERY = gql`\n  {\n    countries {\n      name\n      code\n      continent {\n        name\n      }\n      languages {\n        name\n        native\n      }\n    }\n  }\n`;\nconst Country = ({ match }) => {\n  const { loading, error, data } = useQuery(COUNTRIES_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <h1>Hello From Country</h1>\n      <ul>\n        {data.countries.map(country => {\n          console.log(country);\n          return (\n            <li key={country.name + country.currency}>\n              {\n                <>\n                  <Link to={`${match.path}/${country.code}`}>\n                    {country.name} {country.code}\n                  </Link>\n                  <h3>Continent::=> {country.continent.name}</h3>\n                  {country.languages.map(language => {\n                    return (\n                      <>\n                        <h3>Native::=> {language.native}</h3>\n                        <h3>English::=> {language.name}</h3>\n                      </>\n                    );\n                  })}\n                </>\n              }\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Country;\n"]},"metadata":{},"sourceType":"module"}