{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/i/ReactApp/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/i/ReactApp/frontend/src/pages/Country/Countries.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    countries {\\n      name\\n      code\\n      continent {\\n        name\\n      }\\n      languages {\\n        name\\n        native\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { ListCard } from \"../../components/Country\";\nimport Button from \"../../components/Button\";\nconst COUNTRIES_QUERY = gql(_templateObject());\n\nconst Countries = ({\n  match\n}) => {\n  const _useQuery = useQuery(COUNTRIES_QUERY),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Go Back Try Again\"), React.createElement(Button, {\n    handleClick: () => history.goBack(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Go Back\"));\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Countries\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, data.countries.map(country => {\n    return React.createElement(ListCard, {\n      key: country.name + country.currency,\n      match: match,\n      country: country,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default Countries;","map":{"version":3,"sources":["/home/i/ReactApp/frontend/src/pages/Country/Countries.js"],"names":["React","Link","useQuery","gql","ListCard","Button","COUNTRIES_QUERY","Countries","match","loading","error","data","history","goBack","countries","map","country","name","currency"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,MAAMC,eAAe,GAAGH,GAAH,mBAArB;;AAeA,MAAMI,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA,oBACEN,QAAQ,CAACI,eAAD,CADV;AAAA,QACvBG,OADuB,aACvBA,OADuB;AAAA,QACdC,KADc,aACdA,KADc;AAAA,QACPC,IADO,aACPA,IADO;;AAE/B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EACE,OACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAME,OAAO,CAACC,MAAR,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF;AAMF,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAmBC,OAAO,IAAI;AAC7B,WACE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,IAAR,GAAeD,OAAO,CAACE,QAD9B;AAEE,MAAA,KAAK,EAAEV,KAFT;AAGE,MAAA,OAAO,EAAEQ,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARA,CADH,CAFF,CADF;AAgBD,CA1BD;;AA4BA,eAAeT,SAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nimport { ListCard } from \"../../components/Country\";\nimport Button from \"../../components/Button\"\nconst COUNTRIES_QUERY = gql`\n  {\n    countries {\n      name\n      code\n      continent {\n        name\n      }\n      languages {\n        name\n        native\n      }\n    }\n  }\n`;\nconst Countries = ({ match }) => {\n  const { loading, error, data } = useQuery(COUNTRIES_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <>\n        <h2>Go Back Try Again</h2>\n        <Button handleClick={() => history.goBack()}>Go Back</Button>\n      </>\n    );\n  return (\n    <>\n      <h1>Countries</h1>\n      <ul>\n        {data.countries.map(country => {\n          return (\n            <ListCard\n              key={country.name + country.currency}\n              match={match}\n              country={country}\n            />\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Countries;\n"]},"metadata":{},"sourceType":"module"}