{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/i/ReactApp/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/i/ReactApp/frontend/src/components/CountryShow/CountryShow.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query GetCountry($code: String!) {\\n    country(code: $code) {\\n      name\\n      continent {\\n        name\\n      }\\n      languages {\\n        name\\n        native        \\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nconst GetCountry = gql(_templateObject());\n\nconst CountryShow = ({\n  match,\n  history\n}) => {\n  const code = match.params.code;\n\n  const _useQuery = useQuery(GetCountry, {\n    variables: {\n      code\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Hello From Country Show Code \", data.country.name), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"English  \", data.country.languages.name), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Native\", data.country.languages.native), React.createElement(\"button\", {\n    onClick: () => history.goBack(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Go Back\"));\n};\n\nexport default CountryShow;","map":{"version":3,"sources":["/home/i/ReactApp/frontend/src/components/CountryShow/CountryShow.js"],"names":["React","useQuery","gql","GetCountry","CountryShow","match","history","code","params","variables","loading","error","data","country","name","languages","native","goBack"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,UAAU,GAAGD,GAAH,mBAAhB;;AAcA,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA,QAClCC,IADkC,GACzBF,KAAK,CAACG,MADmB,CAClCD,IADkC;;AAAA,oBAETN,QAAQ,CAACE,UAAD,EAAa;AACpDM,IAAAA,SAAS,EAAE;AAAEF,MAAAA;AAAF;AADyC,GAAb,CAFC;AAAA,QAElCG,OAFkC,aAElCA,OAFkC;AAAA,QAEzBC,KAFyB,aAEzBA,KAFyB;AAAA,QAElBC,IAFkB,aAElBA,IAFkB;;AAK1C,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAkCC,IAAI,CAACC,OAAL,CAAaC,IAA/C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcF,IAAI,CAACC,OAAL,CAAaE,SAAb,CAAuBD,IAArC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWF,IAAI,CAACC,OAAL,CAAaE,SAAb,CAAuBC,MAAlC,CAHF,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAMV,OAAO,CAACW,MAAR,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CADF;AAQD,CAfD;;AAiBA,eAAeb,WAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst GetCountry = gql`\n  query GetCountry($code: String!) {\n    country(code: $code) {\n      name\n      continent {\n        name\n      }\n      languages {\n        name\n        native        \n      }\n    }\n  }\n`;\nconst CountryShow = ({ match, history }) => {\n  const { code } = match.params;\n  const { loading, error, data } = useQuery(GetCountry, {\n    variables: { code }\n  });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <h1>Hello From Country Show Code {data.country.name}</h1>\n      <h1>English  {data.country.languages.name}</h1>\n      <h1>Native{data.country.languages.native}</h1>\n      <button onClick={() => history.goBack()}>Go Back</button>\n    </>\n  );\n};\n\nexport default CountryShow;\n"]},"metadata":{},"sourceType":"module"}