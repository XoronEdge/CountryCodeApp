{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/i/ReactApp/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/i/ReactApp/frontend/src/pages/Country/Countries.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    countries {\\n      name\\n      code\\n      continent {\\n        name\\n      }\\n      languages {\\n        name\\n        native\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { ListCard } from \"../../components/Country\";\nconst COUNTRIES_QUERY = gql(_templateObject());\n\nconst Countries = ({\n  match\n}) => {\n  const _useQuery = useQuery(COUNTRIES_QUERY),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Hello From Country\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, data.countries.map(country => {\n    return React.createElement(ListCard, {\n      key: country.name + country.currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default Countries;","map":{"version":3,"sources":["/home/i/ReactApp/frontend/src/pages/Country/Countries.js"],"names":["React","Link","useQuery","gql","ListCard","COUNTRIES_QUERY","Countries","match","loading","error","data","countries","map","country","name","currency"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,MAAMC,eAAe,GAAGF,GAAH,mBAArB;;AAeA,MAAMG,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA,oBACEL,QAAQ,CAACG,eAAD,CADV;AAAA,QACvBG,OADuB,aACvBA,OADuB;AAAA,QACdC,KADc,aACdA,KADc;AAAA,QACPC,IADO,aACPA,IADO;;AAE/B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmBC,OAAO,IAAI;AAC7B,WAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,OAAO,CAACC,IAAR,GAAeD,OAAO,CAACE,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CAFF,CADF;AAUD,CAdD;;AAgBA,eAAeT,SAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nimport { ListCard } from \"../../components/Country\";\n\nconst COUNTRIES_QUERY = gql`\n  {\n    countries {\n      name\n      code\n      continent {\n        name\n      }\n      languages {\n        name\n        native\n      }\n    }\n  }\n`;\nconst Countries = ({ match }) => {\n  const { loading, error, data } = useQuery(COUNTRIES_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <h1>Hello From Country</h1>\n      <ul>\n        {data.countries.map(country => {\n          return <ListCard key={country.name + country.currency}/>;\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Countries;\n"]},"metadata":{},"sourceType":"module"}