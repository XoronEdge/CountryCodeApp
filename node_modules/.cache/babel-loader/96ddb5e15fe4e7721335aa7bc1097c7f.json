{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/i/ReactApp/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/i/ReactApp/frontend/src/components/CountryShow/CountryShow.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query GetCountry($code: String!) {\\n    country(code: $code) {\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nconst GetCountry = gql(_templateObject());\n\nconst CountryShow = props => {\n  const code = props.match.params.code;\n  console.log(code);\n\n  const _useQuery = useQuery( // gql`\n  //   {\n  //     country(code: codee) {\n  //       name\n  //     }\n  //   }\n  // `,\n  GetCountry, {\n    variables: {\n      codee: \"AD\"\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Hello From Country Show Code \", data.country.name), React.createElement(\"button\", {\n    onClick: () => props.history.goBack(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Go Back\"));\n};\n\nexport default CountryShow;","map":{"version":3,"sources":["/home/i/ReactApp/frontend/src/components/CountryShow/CountryShow.js"],"names":["React","useQuery","gql","GetCountry","CountryShow","props","code","match","params","console","log","variables","codee","loading","error","data","country","name","history","goBack"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,UAAU,GAAGD,GAAH,mBAAhB;;AAOA,MAAME,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,IAAI,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,IAAhC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAF2B,oBAGML,QAAQ,EACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,EAAAA,UARuC,EASvC;AAAEQ,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAb,GATuC,CAHd;AAAA,QAGnBC,OAHmB,aAGnBA,OAHmB;AAAA,QAGVC,KAHU,aAGVA,KAHU;AAAA,QAGHC,IAHG,aAGHA,IAHG;;AAc3B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAkCC,IAAI,CAACC,OAAL,CAAaC,IAA/C,CADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMZ,KAAK,CAACa,OAAN,CAAcC,MAAd,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF;AAMD,CAtBD;;AAwBA,eAAef,WAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst GetCountry = gql`\n  query GetCountry($code: String!) {\n    country(code: $code) {\n      name\n    }\n  }\n`;\nconst CountryShow = props => {\n  const code = props.match.params.code;\n  console.log(code);\n  const { loading, error, data } = useQuery(\n    // gql`\n    //   {\n    //     country(code: codee) {\n    //       name\n    //     }\n    //   }\n    // `,\n    GetCountry,\n    { variables: { codee: \"AD\" } }\n  );\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <h1>Hello From Country Show Code {data.country.name}</h1>\n      <button onClick={() => props.history.goBack()}>Go Back</button>\n    </>\n  );\n};\n\nexport default CountryShow;\n"]},"metadata":{},"sourceType":"module"}