{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/i/ReactApp/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/i/ReactApp/frontend/src/pages/Country/Country.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query Country($code: String!) {\\n    country(code: $code) {\\n      name\\n      currency\\n      phone\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Button from \"../../components/Button\";\nconst COUNTTRY_QUERY = gql(_templateObject());\n\nconst Country = ({\n  match,\n  history\n}) => {\n  const code = match.params.code;\n\n  const _useQuery = useQuery(COUNTTRY_QUERY, {\n    variables: {\n      code\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Go Back Try Again\"), React.createElement(Button, {\n    handleClick: () => history.goBack(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Go Back\"));\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Country Code\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Name \", data.country.name), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Currency \", data.country.currency), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Phone Code \", data.country.phone), React.createElement(Button, {\n    handleClick: () => history.goBack(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Go Back\"));\n};\n\nexport default Country;","map":{"version":3,"sources":["/home/i/ReactApp/frontend/src/pages/Country/Country.js"],"names":["React","useQuery","gql","Button","COUNTTRY_QUERY","Country","match","history","code","params","variables","loading","error","data","goBack","country","name","currency","phone"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,MAAMC,cAAc,GAAGF,GAAH,mBAApB;;AASA,MAAMG,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA,QAC9BC,IAD8B,GACrBF,KAAK,CAACG,MADe,CAC9BD,IAD8B;;AAAA,oBAELP,QAAQ,CAACG,cAAD,EAAiB;AACxDM,IAAAA,SAAS,EAAE;AAAEF,MAAAA;AAAF;AAD6C,GAAjB,CAFH;AAAA,QAE9BG,OAF8B,aAE9BA,OAF8B;AAAA,QAErBC,KAFqB,aAErBA,KAFqB;AAAA,QAEdC,IAFc,aAEdA,IAFc;;AAKtC,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,0CAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAF,EAA4B,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAML,OAAO,CAACO,MAAR,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA5B,CAAP;AACX,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUD,IAAI,CAACE,OAAL,CAAaC,IAAvB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcH,IAAI,CAACE,OAAL,CAAaE,QAA3B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBJ,IAAI,CAACE,OAAL,CAAaG,KAA7B,CAJF,EAME,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMX,OAAO,CAACO,MAAR,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CADF;AAUD,CAjBD;;AAmBA,eAAeT,OAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Button from \"../../components/Button\";\nconst COUNTTRY_QUERY = gql`\n  query Country($code: String!) {\n    country(code: $code) {\n      name\n      currency\n      phone\n    }\n  }\n`;\nconst Country = ({ match, history }) => {\n  const { code } = match.params;\n  const { loading, error, data } = useQuery(COUNTTRY_QUERY, {\n    variables: { code }\n  });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <><h2>Go Back Try Again</h2><Button handleClick={() => history.goBack()}>Go Back</Button></>\n  return (\n    <>\n      <h1>Country Code</h1>\n      <h3>Name {data.country.name}</h3>\n      <h3>Currency {data.country.currency}</h3>\n      <h3>Phone Code {data.country.phone}</h3>\n\n      <Button handleClick={() => history.goBack()}>Go Back</Button>\n    </>\n  );\n};\n\nexport default Country;\n"]},"metadata":{},"sourceType":"module"}