{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/i/ReactApp/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/i/ReactApp/frontend/src/components/CountryShow/CountryShow.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    {\\n      country(code: \", \") {\\n        name\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst CountryShow = props => {\n  const code = props.match.params.code;\n  console.log(code);\n\n  const _useQuery = useQuery(gql(_templateObject(), code.toString())),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Hello From Country Show Code \", data.country.name), React.createElement(\"button\", {\n    onClick: () => props.history.goBack(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Go Back\"));\n};\n\nexport default CountryShow;","map":{"version":3,"sources":["/home/i/ReactApp/frontend/src/components/CountryShow/CountryShow.js"],"names":["React","useQuery","gql","CountryShow","props","code","match","params","console","log","toString","loading","error","data","country","name","history","goBack"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;;AACA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,IAAI,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,IAAhC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAF2B,oBAGMJ,QAAQ,CAACC,GAAD,oBAErBG,IAAI,CAACK,QAAL,EAFqB,EAHd;AAAA,QAGnBC,OAHmB,aAGnBA,OAHmB;AAAA,QAGVC,KAHU,aAGVA,KAHU;AAAA,QAGHC,IAHG,aAGHA,IAHG;;AAU3B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAkCC,IAAI,CAACC,OAAL,CAAaC,IAA/C,CADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMX,KAAK,CAACY,OAAN,CAAcC,MAAd,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF;AAMD,CAlBD;;AAoBA,eAAed,WAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nconst CountryShow = props => {\n  const code = props.match.params.code;\n  console.log(code);\n  const { loading, error, data } = useQuery(gql`\n    {\n      country(code: ${code.toString()}) {\n        name\n      }\n    }\n  `);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <h1>Hello From Country Show Code {data.country.name}</h1>\n      <button onClick={() => props.history.goBack()}>Go Back</button>\n    </>\n  );\n};\n\nexport default CountryShow;\n"]},"metadata":{},"sourceType":"module"}