{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/i/ReactApp/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/i/ReactApp/frontend/src/pages/Country/Country.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query GetCountry($code: String!) {\\n    country(code: $code) {\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nconst COUNTTRY_QUERY = gql(_templateObject());\n\nconst Country = ({\n  match,\n  history\n}) => {\n  const code = match.params.code;\n\n  const _useQuery = useQuery(GetCountry, {\n    variables: {\n      code\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Hello From Country Show Code \", data.country.name), React.createElement(\"button\", {\n    onClick: () => history.goBack(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Go Back\"));\n};\n\nexport default Country;","map":{"version":3,"sources":["/home/i/ReactApp/frontend/src/pages/Country/Country.js"],"names":["React","useQuery","gql","COUNTTRY_QUERY","Country","match","history","code","params","GetCountry","variables","loading","error","data","country","name","goBack"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,cAAc,GAAGD,GAAH,mBAApB;;AAOA,MAAME,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA,QAC9BC,IAD8B,GACrBF,KAAK,CAACG,MADe,CAC9BD,IAD8B;;AAAA,oBAELN,QAAQ,CAACQ,UAAD,EAAa;AACpDC,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF;AADyC,GAAb,CAFH;AAAA,QAE9BI,OAF8B,aAE9BA,OAF8B;AAAA,QAErBC,KAFqB,aAErBA,KAFqB;AAAA,QAEdC,IAFc,aAEdA,IAFc;;AAKtC,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAkCC,IAAI,CAACC,OAAL,CAAaC,IAA/C,CADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMT,OAAO,CAACU,MAAR,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF;AAMD,CAbD;;AAeA,eAAeZ,OAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst COUNTTRY_QUERY = gql`\n  query GetCountry($code: String!) {\n    country(code: $code) {\n      name\n    }\n  }\n`;\nconst Country = ({ match, history }) => {\n  const { code } = match.params;\n  const { loading, error, data } = useQuery(GetCountry, {\n    variables: { code }\n  });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <h1>Hello From Country Show Code {data.country.name}</h1>\n      <button onClick={() => history.goBack()}>Go Back</button>\n    </>\n  );\n};\n\nexport default Country;\n"]},"metadata":{},"sourceType":"module"}