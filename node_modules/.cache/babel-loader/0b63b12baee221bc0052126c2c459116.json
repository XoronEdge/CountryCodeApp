{"ast":null,"code":"import _slicedToArray from \"/home/i/ReactApp/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/i/ReactApp/frontend/src/components/Country/ListCard.js\";\nimport React, { useState } from \"react\";\nimport \"./card.css\";\n\nconst ListCard = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isExpand = _useState2[0],\n        setIsExpand = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"continent\")), React.createElement(\"button\", {\n    onClick: () => setIsExpand(isExpand => !isExpand),\n    className: \"expand-card-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Expand\"), React.createElement(\"div\", {\n    className: \"card-extra\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"continent\")));\n};\n\nexport default ListCard; // return (\n//   <li key={country.name + country.currency}>\n//     {\n//       <>\n//         <Link to={`${match.path}/${country.code}`}>\n//           {country.name} {country.code}\n//         </Link>\n//         <h3>Continent::=> {country.continent.name}</h3>\n//         {country.languages.map(language => {\n//           return (\n//             <>\n//               <h3>Native::=> {language.native}</h3>\n//               <h3>English::=> {language.name}</h3>\n//             </>\n//           );\n//         })}\n//       </>\n//     }\n//   </li>\n// );","map":{"version":3,"sources":["/home/i/ReactApp/frontend/src/components/Country/ListCard.js"],"names":["React","useState","ListCard","isExpand","setIsExpand"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,oBACWD,QAAQ,CAAC,KAAD,CADnB;AAAA;AAAA,QACdE,QADc;AAAA,QACJC,WADI;;AAErB,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,EAKE;AAAQ,IAAA,OAAO,EAAE,MAAKA,WAAW,CAAED,QAAD,IAAc,CAACA,QAAhB,CAAjC;AAA4D,IAAA,SAAS,EAAC,iBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAQE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CARF,CADF;AAeD,CAjBD;;AAkBA,eAAeD,QAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport \"./card.css\";\n\nconst ListCard = () => {\n  const [isExpand, setIsExpand] = useState(false);\n  return (\n    <div className=\"card\">\n      <div className=\"card-top\">\n        <h3>name</h3>\n        <h3>continent</h3>\n      </div>\n      <button onClick={()=> setIsExpand((isExpand) => !isExpand)} className=\"expand-card-btn\">\n        Expand\n      </button>\n      <div className=\"card-extra\">\n        <h3>name</h3>\n        <h3>continent</h3>\n      </div>\n    </div>\n  );\n};\nexport default ListCard;\n// return (\n//   <li key={country.name + country.currency}>\n//     {\n//       <>\n//         <Link to={`${match.path}/${country.code}`}>\n//           {country.name} {country.code}\n//         </Link>\n//         <h3>Continent::=> {country.continent.name}</h3>\n//         {country.languages.map(language => {\n//           return (\n//             <>\n//               <h3>Native::=> {language.native}</h3>\n//               <h3>English::=> {language.name}</h3>\n//             </>\n//           );\n//         })}\n//       </>\n//     }\n//   </li>\n// );\n"]},"metadata":{},"sourceType":"module"}