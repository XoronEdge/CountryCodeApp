{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/i/ReactApp/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/i/ReactApp/frontend/src/pages/Country/Country.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    countries {\\n      name\\n      emoji\\n      currency\\n      native\\n      languages {\\n        name\\n        native\\n        code\\n        rtl\\n      }\\n      continent {\\n        name\\n        code\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nconst CountriesGql = gql(_templateObject());\n\nconst Country = props => {\n  const _useQuery = useQuery(CountriesGql),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Hello From Country\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, data.countries.map(country => {\n    return React.createElement(\"li\", {\n      key: country.name + country.currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\".concat(props.match.path, \"/\").concat(country.code),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, country.name, \" \", country.code));\n  })));\n};\n\nexport default Country;","map":{"version":3,"sources":["/home/i/ReactApp/frontend/src/pages/Country/Country.js"],"names":["React","Link","useQuery","gql","CountriesGql","Country","props","loading","error","data","countries","map","country","name","currency","match","path","code"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,MAAMC,YAAY,GAAGD,GAAH,mBAAlB;;AAoBA,MAAME,OAAO,GAAGC,KAAK,IAAI;AAAA,oBACUJ,QAAQ,CAACE,YAAD,CADlB;AAAA,QACfG,OADe,aACfA,OADe;AAAA,QACNC,KADM,aACNA,KADM;AAAA,QACCC,IADD,aACCA,IADD;;AAEvB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmBC,OAAO,IAAI;AAC7B,WACE;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,IAAR,GAAeD,OAAO,CAACE,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,YAAKR,KAAK,CAACS,KAAN,CAAYC,IAAjB,cAAyBJ,OAAO,CAACK,IAAjC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,OAAO,CAACC,IADX,OACkBD,OAAO,CAACK,IAD1B,CAFJ,CADF;AASD,GAVA,CADH,CAFF,CADF;AA8BD,CAlCD;;AAoCA,eAAeZ,OAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nconst CountriesGql = gql`\n  {\n    countries {\n      name\n      emoji\n      currency\n      native\n      languages {\n        name\n        native\n        code\n        rtl\n      }\n      continent {\n        name\n        code\n      }\n    }\n  }\n`;\nconst Country = props => {\n  const { loading, error, data } = useQuery(CountriesGql);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <h1>Hello From Country</h1>\n      <ul>\n        {data.countries.map(country => {\n          return (\n            <li key={country.name + country.currency}>\n              {\n                <Link to={`${props.match.path}/${country.code}`}>\n                  {country.name} {country.code}\n                </Link>\n              }\n            </li>\n          );\n        })}\n        {/* <li>\n          <Link to={`${props.match.path}/hello1`}>Hello1</Link>\n        </li>\n        <li>\n          <Link to={`${props.match.path}/hello2`}>Hello2</Link>\n        </li>\n        <li>\n          <Link to={`${props.match.path}/hello3`}>Hello3</Link>\n        </li>\n        <li>\n          <Link to={`${props.match.path}/hello4`}>Hello4</Link>\n        </li> */}\n      </ul>\n    </>\n  );\n};\n\nexport default Country;\n"]},"metadata":{},"sourceType":"module"}